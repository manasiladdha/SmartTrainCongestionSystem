/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SecurityOfficierRole;

import Business.Employee.SecurityOfficierEmployee;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.IncidentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manasi Laddha
 */
public class SecurityOfficierWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SecurityOfficierWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    
    public SecurityOfficierWorkAreaJPanel(JPanel userProcessContainer, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        
        populateAssignedRequests();
        tblNewIncidentsAssigned.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN,18));
    }
    
    private void populateAssignedRequests(){
        
        DefaultTableModel dtm = (DefaultTableModel) tblNewIncidentsAssigned.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            //if(request.getStatus().equals(IncidentWorkRequest.StatusType.ASSIGNED.getValue())){
             
              Object row[] = new Object[10];
                row[0] = ((IncidentWorkRequest)request);
                row[1] = request.getSender().getEmployee();
                row[2] = ((IncidentWorkRequest)request).getIncidentLine();
                row[3] = ((IncidentWorkRequest)request).getIncidentRoute();
                row[4] = ((IncidentWorkRequest)request).getIncidentRouteSchedule().getTimeSlotsTrain().getValue(); 
                row[5] = ((IncidentWorkRequest)request).getIncidentTrain();
                row[6] = ((IncidentWorkRequest)request).getIncidentTrainCarNumber();
                row[7] = ((IncidentWorkRequest)request).getIncidentRoute().getEndStation();               
                row[8] = request.getIntermediateReceiver();     
                row[9] = request.getStatus();
                
                dtm.addRow(row);
           // }
        }
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNewIncidentsAssigned = new javax.swing.JTable() {
            //implement table row color
            //    public Component prepareRenderer(TableCellRenderer renderer, int row, int col)
            //    {
                //        Component c = super.prepareRenderer(renderer, row, col);
                //        String status = tblNewIncidentsAssigned.getValueAt(row, 9).toString();
                //
                //        if (status.equals(IncidentWorkRequest.StatusType.ACTION_TAKEN.toString())) {
                    //            c.setBackground(Color.GREEN);
                    //            c.setForeground(Color.WHITE);
                    //        } else {
                    //            c.setBackground(super.getBackground());
                    //            c.setForeground(super.getForeground());
                    //        }
                //        return c;
                //    }

            //Implement table cell tool tips.
            public String getToolTipText(MouseEvent e) {
                String tip = null;
                java.awt.Point p = e.getPoint();
                int rowIndex = rowAtPoint(p);

                if(rowIndex <0){
                    return null;
                }

                IncidentWorkRequest request = (IncidentWorkRequest) tblNewIncidentsAssigned.getValueAt(rowIndex, 0);
                tip = request.getMessage();

                return tip;

            }
        };
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/supervisor.GIF"))); // NOI18N
        jLabel6.setText("Security Officier Work Area");

        tblNewIncidentsAssigned.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblNewIncidentsAssigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Victim", "Line", "Route", "Schedule", "Train", "Car Number", "End Station", "Send By", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNewIncidentsAssigned.setColumnSelectionAllowed(true);
        tblNewIncidentsAssigned.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblNewIncidentsAssigned);
        tblNewIncidentsAssigned.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/submit.png"))); // NOI18N
        jButton1.setText("Resolve Incident >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Action Taken :");

        txtMessage.setColumns(20);
        txtMessage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMessage.setRows(5);
        jScrollPane2.setViewportView(txtMessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 683, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(381, 381, 381)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblNewIncidentsAssigned.getSelectedRow();
        
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please select a row.", "Assign Incident", JOptionPane.WARNING_MESSAGE);
            return;
        }        
        
        if(txtMessage.getText().trim().length() <=0){
            JOptionPane.showMessageDialog(this, "Please mention action taken.", "Assign Incident", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
       IncidentWorkRequest request = (IncidentWorkRequest) tblNewIncidentsAssigned.getValueAt(selectedRow, 0);
        
       if(request.getStatus().equals(IncidentWorkRequest.StatusType.ACTION_TAKEN.getValue())){
           JOptionPane.showMessageDialog(this, "Request already resolved.", "Assign Incident", JOptionPane.WARNING_MESSAGE);
           return;
       }
       
       request.setMessage(txtMessage.getText());
       request.setStatus(IncidentWorkRequest.StatusType.ACTION_TAKEN.getValue());
       request.setResolveDate(new Date());
       request.setReceiver(account);       
       SecurityOfficierEmployee se = (SecurityOfficierEmployee) account.getEmployee();
       se.setIsBusy(false);
       
       populateAssignedRequests();
        
       txtMessage.setText("");
       
        JOptionPane.showMessageDialog(this, "Request resolved.", "Assign Incident", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblNewIncidentsAssigned;
    private javax.swing.JTextArea txtMessage;
    // End of variables declaration//GEN-END:variables
}
