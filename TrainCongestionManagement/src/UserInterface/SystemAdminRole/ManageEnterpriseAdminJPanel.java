/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Employee.SecurityAdminEmployee;
import Business.Employee.TMAdminEmployee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SecurityAuthorityEnterprise;
import Business.Enterprise.TrainAuthorityEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.SecurityAdministratorOrganization;
import Business.Organization.TMAdministratorOrganization;
import Business.Role.SecurityAdminRole;
import Business.Role.TMAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        
        lblErrMsgPswrd.setText("");
        lblErrMsgAdmin.setText("");
        lblErrMsgUser.setText("");
        
        populateTable();
        populateNetworkComboBox();
        
        enterpriseJTable.getTableHeader().setFont(new Font("Tahoma",Font.PLAIN,18));
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[4];
                    row[0] = enterprise;
                    row[1] = network;
                    row[2] = userAccount.getUsername();
                    row[3] = userAccount.getEmployee().getName();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
        
        if(networkJComboBox.getItemCount() <= 0){
            networkJComboBox.setEnabled(false);
            submitJButton.setEnabled(false);    
        }
        else{
            networkJComboBox.setEnabled(true);
            submitJButton.setEnabled(true);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
        if(enterpriseJComboBox.getItemCount() <= 0){
            networkJComboBox.setEnabled(false);
            submitJButton.setEnabled(false);    
        }
        else{
            enterpriseJComboBox.setEnabled(true);
            submitJButton.setEnabled(true);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        lblNtwrk = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        removeJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblErrMsgPswrd = new javax.swing.JLabel();
        lblErrMsgUser = new javax.swing.JLabel();
        lblErrMsgAdmin = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        lblErrMsgPswrd1 = new javax.swing.JLabel();
        lblErrMsgPswrd2 = new javax.swing.JLabel();
        lblErrMsgPswrd3 = new javax.swing.JLabel();

        enterpriseJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username", "Admin Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enterpriseJTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(enterpriseJTable);

        lblNtwrk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNtwrk.setText("Network :");

        networkJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Username :");

        usernameJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameJTextFieldFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Enterprise :");

        enterpriseJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        removeJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/submit.png"))); // NOI18N
        removeJButton.setText("Remove T-Admin");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Password :");

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Admin Name :");

        passwordJPasswordField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordJPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordJPasswordFieldFocusLost(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/account.png"))); // NOI18N
        jLabel6.setText("Manage Enterprise Administrator");

        lblErrMsgPswrd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrMsgPswrd.setForeground(java.awt.Color.red);
        lblErrMsgPswrd.setText("ErrMsg");

        lblErrMsgUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrMsgUser.setForeground(java.awt.Color.red);
        lblErrMsgUser.setText("ErrMsg");

        lblErrMsgAdmin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrMsgAdmin.setForeground(java.awt.Color.red);
        lblErrMsgAdmin.setText("ErrMsg");

        submitJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submitJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/submit.png"))); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        lblErrMsgPswrd1.setForeground(java.awt.Color.red);
        lblErrMsgPswrd1.setText("*UserName should start with letters and ends with digit (No special characters)");

        lblErrMsgPswrd2.setForeground(java.awt.Color.red);
        lblErrMsgPswrd2.setText("*No Spaces, Minimum Length 6,Atleast one letter & number");

        lblErrMsgPswrd3.setForeground(java.awt.Color.red);
        lblErrMsgPswrd3.setText("*AdminName can only have letters.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(lblNtwrk))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrMsgPswrd))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblErrMsgAdmin))
                                    .addComponent(lblErrMsgPswrd3)
                                    .addComponent(lblErrMsgPswrd1)
                                    .addComponent(lblErrMsgPswrd2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(usernameJTextField)
                                            .addComponent(enterpriseJComboBox, 0, 208, Short.MAX_VALUE)
                                            .addComponent(networkJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrMsgUser))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(backJButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addComponent(removeJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNtwrk)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeJButton))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblErrMsgUser))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(lblErrMsgPswrd1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrMsgPswrd))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrMsgPswrd2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(lblErrMsgAdmin)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(lblErrMsgPswrd3)))
                .addGap(30, 30, 30)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
         int selectedRow = enterpriseJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a T-Admin!", "Enterprise Admin Work Area", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Enterprise enterprise = (Enterprise) enterpriseJTable.getValueAt(selectedRow, 0);
        
        for(Employee admin : enterprise.getEmployeeDirectory().getEmployeeList()){
            
          String selectedName = enterpriseJTable.getValueAt(selectedRow, 3).toString();
          
          if (admin.getName().equalsIgnoreCase(selectedName)){              
              
              for(UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()){
                  if (ua.getEmployee().getName().equalsIgnoreCase(selectedName)){
                      enterprise.getEmployeeDirectory().removeEmployee(admin);
                      enterprise.getUserAccountDirectory().removeUserAccount(ua); 
                      break;
                  }                  
              }
            break;             
          }
          
        }
          populateTable();
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void resetFields(){
        
        nameJTextField.setText("");
        passwordJPasswordField.setText("");
        usernameJTextField.setText("");
        
    }
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
       
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    boolean bUserNameCheck;
    private void usernameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameJTextFieldFocusLost
        // TODO add your handling code here:
         if (usernameJTextField.getText().trim().length() ==0){
             lblErrMsgUser.setText("User Name cannot be blank.");    
             bUserNameCheck = false;
         }
         else {
            Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

            String username = usernameJTextField.getText();
            
            if (!enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(username)){
                lblErrMsgUser.setText("User Name already exists.");
                bAdminNameCheck = false;               
            }else{  
                
                Pattern p = Pattern.compile("^[a-zA-Z]+[0-9]+$");
                Matcher m = p.matcher(username);
                
                if(m.matches()){
                   lblErrMsgUser.setText("");
                   bUserNameCheck = true; 
                }
                else{
                    lblErrMsgUser.setText("User Name does not match criteria.");
                    bAdminNameCheck = false;       
                }
            }
         }
        
    }//GEN-LAST:event_usernameJTextFieldFocusLost

    boolean bPswrdCheck;
    private void passwordJPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordJPasswordFieldFocusLost
        // TODO add your handling code here:
         if (passwordJPasswordField.getPassword().length == 0){
             lblErrMsgPswrd.setText("Password cannot be blank.");  
             bPswrdCheck = false;
         }
         else {
               String password = String.valueOf(passwordJPasswordField.getPassword());
                Pattern p = Pattern.compile("^(?=.*[0-9a-zA-Z])(?=\\S+$).{6,}$");
                Matcher m = p.matcher(password);
                
                if(m.matches()){
                    lblErrMsgPswrd.setText("");
                    bPswrdCheck = true;
                }
                else{
                    lblErrMsgPswrd.setText("Password does not match criteria.");  
                    bPswrdCheck = false;
                }
         }
    }//GEN-LAST:event_passwordJPasswordFieldFocusLost

    boolean bAdminNameCheck;
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusLost
        // TODO add your handling code here:
         if (nameJTextField.getText().trim().length() == 0){
             lblErrMsgAdmin.setText("Admin Name cannot be blank.");   
             bAdminNameCheck = false;
         }
         else {
                String name = nameJTextField.getText().trim();
                Pattern p = Pattern.compile("^[a-zA-Z]+[\\sa-zA-Z]+$");
                Matcher m = p.matcher(name);
                
                if(m.matches()){
                    lblErrMsgAdmin.setText("");
                    bAdminNameCheck = true;
                }
                else{
                    lblErrMsgAdmin.setText("Admin Name does not match the criteria.");   
                    bAdminNameCheck = false;
                }
         }
        
    }//GEN-LAST:event_nameJTextFieldFocusLost

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
               // TODO add your handling code here:
         if(bAdminNameCheck && bPswrdCheck && bUserNameCheck){
            Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

            String username = usernameJTextField.getText();
            
            if (!enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(username)){
                lblErrMsgUser.setText("User Name already exists.");
                return;
            }
            
            String password = String.valueOf(passwordJPasswordField.getPassword());
            String name = nameJTextField.getText();

            if(enterprise instanceof TrainAuthorityEnterprise){
                Employee employee = enterprise.getEmployeeDirectory().createEmployee(name, new TMAdminEmployee());
                enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new TMAdminRole());
            }
            else if (enterprise instanceof SecurityAuthorityEnterprise){
                Employee employee = enterprise.getEmployeeDirectory().createEmployee(name, new SecurityAdminEmployee());
                enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new SecurityAdminRole());
            }
         
            populateTable();
            resetFields(); 
         }
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrMsgAdmin;
    private javax.swing.JLabel lblErrMsgPswrd;
    private javax.swing.JLabel lblErrMsgPswrd1;
    private javax.swing.JLabel lblErrMsgPswrd2;
    private javax.swing.JLabel lblErrMsgPswrd3;
    private javax.swing.JLabel lblErrMsgUser;
    private javax.swing.JLabel lblNtwrk;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton removeJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
