/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.TMSupervisorRole;

import Business.Enterprise.TrainAuthorityEnterprise;
import Business.Organization.Organization;
import Business.Organization.TravellerOrganization;
import Business.TrainManagementSystem.Line;
import Business.TrainManagementSystem.TrainStatus;
import Business.TrainManagementSystem.TrainOffered;
import Business.TrainManagementSystem.TrainOfferedHistory;
import Business.WorkQueue.AlertWorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manasi Laddha
 */
public class ManageAlertsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAlertsJPanel
     */
    JPanel userProcessContainer;
    TrainAuthorityEnterprise enterprise;
   
    
    public ManageAlertsJPanel(JPanel userProcessContainer, TrainAuthorityEnterprise trainAuthorityEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = trainAuthorityEnterprise;
               
        populateLines();
        populateTable();
        
    }
    
    private void populateLines(){
        
        for(Line line: enterprise.getLineCatalog().getLinesList()){
            cboLines.addItem(line);            
        }
        
        if(cboLines.getItemCount() <=0){
            btnSendAlerts.setEnabled(false);
            cboLines.setEnabled(false);
        }
        else{
            btnSendAlerts.setEnabled(true);
            cboLines.setEnabled(true);
        }
        
    }
    
    private void populateTable(){
        
        DefaultTableModel dtm = (DefaultTableModel) tblTrains.getModel();
        dtm.setRowCount(0);
        TrainOfferedHistory toh = enterprise.getTrainsOfferedHistory();
        Date today = new Date();
        Line selectedLine = (Line) cboLines.getSelectedItem();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        int maximumLimit = enterprise.getTrainCatalog().getTrainsList().get(0).getTrainCapacity();
        
        for(TrainOffered train: toh.getTrainsOffered()){ 
            if(formatter.format(train.getDayOffered()).equals(formatter.format(today)) && train.getTrain().getLineOnTrain().equals(selectedLine)){               
               for(TrainStatus rt : train.getRunningTrains()){
                  if(rt.getStatus().startsWith("OVER")){
                      Object[] row = new Object[6];
                      row[0] = rt.getTrainSchedule().getRoute().getRouteName();                     
                      row[1] = rt;
                      row[2] = rt.getTrainSchedule().getRoute().fetchRunningTrain(rt.getTrainSchedule().getTimeSlot()).getTrainName();
                      row[3] = rt.getRunningCapacity();
                      row[4] = calculatePercentage(rt.getRunningCapacity(), maximumLimit);          
                      row[5] = rt.getSendAlert();
                      dtm.addRow(row);
                  }
               }                
                
            }            
        }
        
    }
    private String calculatePercentage(int upperLimit, int lowerLimt){
        
        String resultedString ="";
        
        int diff = upperLimit - lowerLimt ;
        
        int result = (diff * 100)/ lowerLimt ;
        
        if(result <= 10){
            resultedString ="Managable";
        }
        else {
            resultedString ="Un-Managable";
        }
        return resultedString;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrains = new javax.swing.JTable();
        cboLines = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnSendAlerts = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/alert2.png"))); // NOI18N
        jLabel1.setText("Manage T-Alerts");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tblTrains.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblTrains.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Route Name", "Time Slot", "Train", "Capacity", "Crowdedness", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTrains.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblTrains);

        cboLines.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLinesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Line:");

        btnSendAlerts.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSendAlerts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/alert.png"))); // NOI18N
        btnSendAlerts.setText("Send Alerts >>");
        btnSendAlerts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendAlertsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLines, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1048, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSendAlerts, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnSendAlerts, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Over Limit Trains", jPanel1);

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(428, 428, 428)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLinesActionPerformed
        // TODO add your handling code here:
        if(cboLines.getItemCount() > 0 ){
             populateTable();
        }
       
    }//GEN-LAST:event_cboLinesActionPerformed

    private void btnSendAlertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendAlertsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTrains.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row.", "Over-Limit", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(tblTrains.getValueAt(selectedRow, 5) != null && tblTrains.getValueAt(selectedRow, 5).toString().equalsIgnoreCase("SEND")){
            JOptionPane.showMessageDialog(this, "Alert already sent.", "Over-Limit", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        
        for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof TravellerOrganization){
                
                AlertWorkRequest sendAlert = new AlertWorkRequest();
                sendAlert.setAlertedline((Line)cboLines.getSelectedItem());
                sendAlert.setRouteName(tblTrains.getValueAt(selectedRow, 0).toString());
                sendAlert.setTimeSlot(tblTrains.getValueAt(selectedRow, 1).toString());
                sendAlert.setTrainName(tblTrains.getValueAt(selectedRow, 2).toString());
                sendAlert.setResult(tblTrains.getValueAt(selectedRow, 4).toString());
                sendAlert.setAlertDate(new Date());
                sendAlert.setStatus("SEND");
               
                TrainStatus rt = (TrainStatus) tblTrains.getValueAt(selectedRow, 1);                
                rt.setSendAlert("SEND");
                
                populateTable();    
                
                org.getWorkQueue().getWorkRequestList().add(sendAlert);                
                JOptionPane.showMessageDialog(tblTrains, "Alert send successfully.", "Over-Limit", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
        
       
        
    }//GEN-LAST:event_btnSendAlertsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSendAlerts;
    private javax.swing.JComboBox cboLines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblTrains;
    // End of variables declaration//GEN-END:variables
}
