/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.TMSupervisorRole;
import Business.Enterprise.TrainAuthorityEnterprise;
import Business.TrainManagementSystem.Line;
import Business.TrainManagementSystem.Train;
import Business.TrainManagementSystem.TrainCar;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manasi Laddha
 */
public class ManageTrainsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageTrainsJPanel
     */
    
    JPanel userProcessContainer;
    TrainAuthorityEnterprise enterprise;
      
    public ManageTrainsJPanel(JPanel userProcessContainer,TrainAuthorityEnterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        lblErrMsg.setText("");
        populateLinesForTrains();
        populateLines();
        tblTrainCapacityDetails.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 18));
     
        rbtnBicycleNo.setSelected(true);
        rbtnRestroomNo.setSelected(true);
    }
    
    private void populateLines(){
        
        for(Line line: enterprise.getLineCatalog().getLinesList()){
            if(!line.isIsActive())
            cboLines.addItem(line);            
        }
        
    }
    
    private void populateLinesForTrains(){
        cboLinesForTrains.removeAllItems();        
        for(Line l: enterprise.getLineCatalog().getLinesList()){
           // if(l.isIsActive()){            
                cboLinesForTrains.addItem(l);
           // }
            
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        createTrainsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTrainName = new javax.swing.JTextField();
        btnCreateTrain = new javax.swing.JButton();
        cboLines = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spnrStandingCapacity = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        spnrTrainCarsCount = new javax.swing.JSpinner();
        spnrReservedCapacity = new javax.swing.JSpinner();
        spnrSeatingCapacity = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        rbtnRestroomNo = new javax.swing.JRadioButton();
        rbtnRestroomYes = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        rbtnBicycleNo = new javax.swing.JRadioButton();
        rbtnBicycleYes = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        spnrTrainCarsWithRestrooms = new javax.swing.JSpinner();
        spnrTrainCarsWithBicyles = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblErrMsg = new javax.swing.JLabel();
        addCarsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrainCapacityDetails = new javax.swing.JTable();
        cboLinesForTrains = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        spnrActualTrainCarsCount = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        spnrActualSeatingCapacity = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        spnrActualReservedCapacity = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        spnrActualStandingCapacity = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        rbtnActualRestroomYes = new javax.swing.JRadioButton();
        rbtnActualRestroomNo = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        rbtnActualBicycleYes = new javax.swing.JRadioButton();
        rbtnActualBicycleNo = new javax.swing.JRadioButton();
        spnrActualTrainCarsWithRestrooms = new javax.swing.JSpinner();
        spnrActualTrainCarsWithBicyles = new javax.swing.JSpinner();
        btnFetchTrainDetails = new javax.swing.JButton();
        btnUpdateTrain = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/train.png"))); // NOI18N
        jLabel6.setText("Manage Trains");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Train Name :");

        txtTrainName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTrainName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTrainNameFocusLost(evt);
            }
        });

        btnCreateTrain.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCreateTrain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/train.png"))); // NOI18N
        btnCreateTrain.setText("Create Train");
        btnCreateTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTrainActionPerformed(evt);
            }
        });

        cboLines.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Line :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Train Cars Count:");

        spnrStandingCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrStandingCapacity.setModel(new javax.swing.SpinnerNumberModel(20, 20, 299, 1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Maximum Seating Capacity per Car :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Maximum Reserved Seats per Car :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Maximum Standing Capacity per Car :");

        spnrTrainCarsCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrTrainCarsCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        spnrReservedCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrReservedCapacity.setModel(new javax.swing.SpinnerNumberModel(10, 10, 299, 1));

        spnrSeatingCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrSeatingCapacity.setModel(new javax.swing.SpinnerNumberModel(80, 80, 299, 1));

        jLabel10.setForeground(java.awt.Color.red);
        jLabel10.setText("*Cars per Train Cannot be more than 5");

        buttonGroup1.add(rbtnRestroomNo);
        rbtnRestroomNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnRestroomNo.setText("No");
        rbtnRestroomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnRestroomNoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnRestroomYes);
        rbtnRestroomYes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnRestroomYes.setText("Yes");
        rbtnRestroomYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnRestroomYesActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Count:");

        buttonGroup2.add(rbtnBicycleNo);
        rbtnBicycleNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnBicycleNo.setText("No");
        rbtnBicycleNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBicycleNoActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnBicycleYes);
        rbtnBicycleYes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnBicycleYes.setText("Yes");
        rbtnBicycleYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBicycleYesActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Is Space for Bicycle/Skies in Train Car? :");

        spnrTrainCarsWithRestrooms.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrTrainCarsWithRestrooms.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spnrTrainCarsWithRestrooms.setEnabled(false);

        spnrTrainCarsWithBicyles.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrTrainCarsWithBicyles.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spnrTrainCarsWithBicyles.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Is Restroom Present in Train Car? :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Count:");

        lblErrMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrMsg.setForeground(java.awt.Color.red);
        lblErrMsg.setText("ErrMsg");

        javax.swing.GroupLayout createTrainsPanelLayout = new javax.swing.GroupLayout(createTrainsPanel);
        createTrainsPanel.setLayout(createTrainsPanelLayout);
        createTrainsPanelLayout.setHorizontalGroup(
            createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTrainsPanelLayout.createSequentialGroup()
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(createTrainsPanelLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel8))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel9))
                    .addGroup(createTrainsPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnrTrainCarsCount)
                    .addComponent(spnrSeatingCapacity)
                    .addComponent(spnrReservedCapacity)
                    .addComponent(spnrStandingCapacity)
                    .addComponent(txtTrainName)
                    .addComponent(cboLines, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(createTrainsPanelLayout.createSequentialGroup()
                        .addComponent(btnCreateTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(lblErrMsg))
                .addContainerGap(922, Short.MAX_VALUE))
            .addGroup(createTrainsPanelLayout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createTrainsPanelLayout.createSequentialGroup()
                        .addComponent(rbtnBicycleYes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnBicycleNo))
                    .addGroup(createTrainsPanelLayout.createSequentialGroup()
                        .addComponent(rbtnRestroomYes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnRestroomNo)))
                .addGap(85, 85, 85)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnrTrainCarsWithBicyles, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnrTrainCarsWithRestrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createTrainsPanelLayout.setVerticalGroup(
            createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTrainsPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTrainName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lblErrMsg))
                .addGap(23, 23, 23)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spnrTrainCarsCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(23, 23, 23)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(spnrSeatingCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnrReservedCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(27, 27, 27)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spnrStandingCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnRestroomNo)
                    .addComponent(rbtnRestroomYes)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(spnrTrainCarsWithRestrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnrTrainCarsWithBicyles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createTrainsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnBicycleYes)
                        .addComponent(rbtnBicycleNo)
                        .addComponent(jLabel12)
                        .addComponent(jLabel14)))
                .addGap(41, 41, 41)
                .addComponent(btnCreateTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create New Train", createTrainsPanel);

        tblTrainCapacityDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblTrainCapacityDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Train Name", "Maximum Capacity", "Train Cars", "Normal Seats Capacity", "Reserved Seats Capacity", "Empty Space Capacity", "Restroom Available", "Bicycle/Skies Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTrainCapacityDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblTrainCapacityDetails);

        cboLinesForTrains.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLinesForTrains.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLinesForTrains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLinesForTrainsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Line :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Train Cars Count:");

        spnrActualTrainCarsCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualTrainCarsCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        spnrActualTrainCarsCount.setEnabled(false);
        spnrActualTrainCarsCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnrActualTrainCarsCountStateChanged(evt);
            }
        });

        jLabel16.setForeground(java.awt.Color.red);
        jLabel16.setText("*Cars per Train Cannot be more than 5");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Maximum Seating Capacity per Car :");

        spnrActualSeatingCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualSeatingCapacity.setModel(new javax.swing.SpinnerNumberModel(80, 80, 299, 1));
        spnrActualSeatingCapacity.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Maximum Reserved Seats per Car :");

        spnrActualReservedCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualReservedCapacity.setModel(new javax.swing.SpinnerNumberModel(10, 10, 299, 1));
        spnrActualReservedCapacity.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Maximum Standing Capacity per Car :");

        spnrActualStandingCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualStandingCapacity.setModel(new javax.swing.SpinnerNumberModel(20, 20, 299, 1));
        spnrActualStandingCapacity.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Update Restroom Count in Train Car? :");

        buttonGroup1.add(rbtnActualRestroomYes);
        rbtnActualRestroomYes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnActualRestroomYes.setText("Yes");
        rbtnActualRestroomYes.setEnabled(false);
        rbtnActualRestroomYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnActualRestroomYesActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnActualRestroomNo);
        rbtnActualRestroomNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnActualRestroomNo.setText("No");
        rbtnActualRestroomNo.setEnabled(false);
        rbtnActualRestroomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnActualRestroomNoActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Update Space for Bicycle/Skies in Train Car? :");

        buttonGroup2.add(rbtnActualBicycleYes);
        rbtnActualBicycleYes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnActualBicycleYes.setText("Yes");
        rbtnActualBicycleYes.setEnabled(false);
        rbtnActualBicycleYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnActualBicycleYesActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnActualBicycleNo);
        rbtnActualBicycleNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rbtnActualBicycleNo.setText("No");
        rbtnActualBicycleNo.setEnabled(false);
        rbtnActualBicycleNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnActualBicycleNoActionPerformed(evt);
            }
        });

        spnrActualTrainCarsWithRestrooms.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualTrainCarsWithRestrooms.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spnrActualTrainCarsWithRestrooms.setEnabled(false);

        spnrActualTrainCarsWithBicyles.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spnrActualTrainCarsWithBicyles.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        spnrActualTrainCarsWithBicyles.setEnabled(false);

        btnFetchTrainDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFetchTrainDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/train.png"))); // NOI18N
        btnFetchTrainDetails.setText("Fetch Train Details >>");
        btnFetchTrainDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFetchTrainDetailsActionPerformed(evt);
            }
        });

        btnUpdateTrain.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateTrain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/train.png"))); // NOI18N
        btnUpdateTrain.setText("Update Train");
        btnUpdateTrain.setEnabled(false);
        btnUpdateTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTrainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCarsPanelLayout = new javax.swing.GroupLayout(addCarsPanel);
        addCarsPanel.setLayout(addCarsPanelLayout);
        addCarsPanelLayout.setHorizontalGroup(
            addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCarsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCarsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboLinesForTrains, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCarsPanelLayout.createSequentialGroup()
                        .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addCarsPanelLayout.createSequentialGroup()
                                .addComponent(btnFetchTrainDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addCarsPanelLayout.createSequentialGroup()
                                        .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(spnrActualSeatingCapacity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                            .addComponent(spnrActualReservedCapacity, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spnrActualStandingCapacity, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spnrActualTrainCarsCount))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16))
                                    .addGroup(addCarsPanelLayout.createSequentialGroup()
                                        .addComponent(rbtnActualRestroomYes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbtnActualRestroomNo)
                                        .addGap(18, 18, 18)
                                        .addComponent(spnrActualTrainCarsWithRestrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(addCarsPanelLayout.createSequentialGroup()
                                        .addComponent(rbtnActualBicycleYes)
                                        .addGap(12, 12, 12)
                                        .addComponent(rbtnActualBicycleNo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spnrActualTrainCarsWithBicyles, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(addCarsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnUpdateTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(216, 216, 216)))
                        .addContainerGap(564, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        addCarsPanelLayout.setVerticalGroup(
            addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCarsPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLinesForTrains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(spnrActualTrainCarsCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFetchTrainDetails)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(spnrActualSeatingCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(spnrActualReservedCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(spnrActualStandingCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(rbtnActualRestroomYes)
                    .addComponent(rbtnActualRestroomNo)
                    .addComponent(spnrActualTrainCarsWithRestrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addCarsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(rbtnActualBicycleYes)
                    .addComponent(rbtnActualBicycleNo)
                    .addComponent(spnrActualTrainCarsWithBicyles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdateTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Update Trains", addCarsPanel);

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(492, 492, 492)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void resetfields(){
        
        txtTrainName.setText("");
        rbtnBicycleNo.setSelected(true);
        rbtnRestroomNo.setSelected(true);
        spnrReservedCapacity.setValue(10);
        spnrSeatingCapacity.setValue(80);
        spnrStandingCapacity.setValue(20);
        spnrTrainCarsCount.setValue(1);
        spnrTrainCarsWithBicyles.setValue(0);
        spnrTrainCarsWithRestrooms.setValue(0);
        spnrTrainCarsWithBicyles.setEnabled(false);
        spnrTrainCarsWithRestrooms.setEnabled(false);
        
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void rbtnBicycleYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBicycleYesActionPerformed
        // TODO add your handling code here:
        if(rbtnBicycleYes.isSelected()){
            spnrTrainCarsWithBicyles.setEnabled(true);
            SpinnerNumberModel  model = (SpinnerNumberModel)spnrTrainCarsWithBicyles.getModel();
            model.setMaximum(Integer.parseInt(spnrTrainCarsCount.getValue().toString()));
        }
        else{
            spnrTrainCarsWithBicyles.setEnabled(false);
        }

    }//GEN-LAST:event_rbtnBicycleYesActionPerformed

    private void rbtnBicycleNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBicycleNoActionPerformed
        // TODO add your handling code here:
        if(rbtnBicycleNo.isSelected()){
            spnrTrainCarsWithBicyles.setEnabled(false);
            spnrTrainCarsWithBicyles.setValue(0);
        }

    }//GEN-LAST:event_rbtnBicycleNoActionPerformed

    private void rbtnRestroomYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnRestroomYesActionPerformed
        // TODO add your handling code here:
        if(rbtnRestroomYes.isSelected()){
            spnrTrainCarsWithRestrooms.setEnabled(true);
            SpinnerNumberModel  model = (SpinnerNumberModel )spnrTrainCarsWithRestrooms.getModel();
            int a =Integer.parseInt(spnrTrainCarsCount.getValue().toString());
            model.setMaximum(a);
        }
        else{
            spnrTrainCarsWithRestrooms.setEnabled(false);
        }
    }//GEN-LAST:event_rbtnRestroomYesActionPerformed

    private void rbtnRestroomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnRestroomNoActionPerformed
        // TODO add your handling code here:
        if(rbtnRestroomNo.isSelected()){
            spnrTrainCarsWithRestrooms.setEnabled(false);
            spnrTrainCarsWithRestrooms.setValue(0);
        }

    }//GEN-LAST:event_rbtnRestroomNoActionPerformed

    private void btnCreateTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTrainActionPerformed
        // TODO add your handling code here:
       if(!bTrainNamePresent){
           txtTrainNameFocusLost(null);
       }
       else{
        
        Train newTrain =  enterprise.getTrainCatalog().addNewTrain(txtTrainName.getText(), (Line) cboLines.getSelectedItem());

        int carCount = (int)spnrTrainCarsCount.getValue();
        int normalCapacity = (int) spnrSeatingCapacity.getValue();
        int reservedCapacity = (int) spnrReservedCapacity.getValue();
        int packedCapacity =(int) spnrStandingCapacity.getValue();


        int restRoomCar = (int) spnrTrainCarsWithRestrooms.getValue();
        int bicycleCar =  (int) spnrTrainCarsWithBicyles.getValue();

        for(int i =0 ; i < carCount + 1; i++){

            TrainCar tc = new TrainCar(i+1);
            tc.setNormalSeatCapacity(normalCapacity);
            tc.setPackagedCapacity(packedCapacity);
            tc.setReservedSeats(reservedCapacity);
            tc.updateMaximunCapacity();
            newTrain.getTrainCars().add(tc);

            if(restRoomCar >0){
                tc.setIsRestroomPresent(true);
                restRoomCar--;
            }

            if(bicycleCar > 0){
                tc.setIsBicyclesSkisAllowed(true);
                bicycleCar--;
            }

        }
        
        JOptionPane.showMessageDialog(this, "Train Created successfully.", "Create Train", JOptionPane.INFORMATION_MESSAGE );
        resetfields();
      
       }
    }//GEN-LAST:event_btnCreateTrainActionPerformed

    private void cboLinesForTrainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLinesForTrainsActionPerformed
        // TODO add your handling code here:
        Line selectedLine = (Line)cboLinesForTrains.getSelectedItem();
        
        if(selectedLine == null){
            return;
        }
                
        populateTable(selectedLine);
        
    }//GEN-LAST:event_cboLinesForTrainsActionPerformed

    private void rbtnActualRestroomYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnActualRestroomYesActionPerformed
        // TODO add your handling code here:
         if(rbtnActualRestroomYes.isSelected()){
            spnrActualTrainCarsWithRestrooms.setEnabled(true);
            SpinnerNumberModel  model = (SpinnerNumberModel )spnrActualTrainCarsWithRestrooms.getModel();
            int a =Integer.parseInt(spnrActualTrainCarsCount.getValue().toString());
            model.setMaximum(a);
        }
        else{
            spnrActualTrainCarsWithRestrooms.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_rbtnActualRestroomYesActionPerformed

    private void rbtnActualRestroomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnActualRestroomNoActionPerformed
        // TODO add your handling code here:
        if(rbtnActualRestroomNo.isSelected()){
            spnrActualTrainCarsWithRestrooms.setEnabled(false);
            spnrActualTrainCarsWithRestrooms.setValue(0);
        }
        
    }//GEN-LAST:event_rbtnActualRestroomNoActionPerformed

    private void rbtnActualBicycleYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnActualBicycleYesActionPerformed
        // TODO add your handling code here:
        if(rbtnActualBicycleYes.isSelected()){
            spnrActualTrainCarsWithBicyles.setEnabled(true);
            SpinnerNumberModel  model = (SpinnerNumberModel)spnrActualTrainCarsWithBicyles.getModel();
            model.setMaximum(Integer.parseInt(spnrActualTrainCarsCount.getValue().toString()));
        }
        else{
            spnrActualTrainCarsWithBicyles.setEnabled(false);
        }
        
    }//GEN-LAST:event_rbtnActualBicycleYesActionPerformed

    private void rbtnActualBicycleNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnActualBicycleNoActionPerformed
        // TODO add your handling code here:
         if(rbtnActualBicycleNo.isSelected()){
            spnrActualTrainCarsWithBicyles.setEnabled(false);
            spnrActualTrainCarsWithBicyles.setValue(0);
        }
    }//GEN-LAST:event_rbtnActualBicycleNoActionPerformed

    private void btnFetchTrainDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFetchTrainDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblTrainCapacityDetails.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row!", "Update Train", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Train selectedTrain = (Train) tblTrainCapacityDetails.getValueAt(selectedRow, 0);
        
        spnrActualReservedCapacity.setEnabled(true);
        spnrActualSeatingCapacity.setEnabled(true);
        spnrActualStandingCapacity.setEnabled(true);
        spnrActualTrainCarsCount.setEnabled(true);
        rbtnActualBicycleNo.setEnabled(true);
        rbtnActualBicycleYes.setEnabled(true);
        rbtnActualRestroomNo.setEnabled(true);
        rbtnActualRestroomYes.setEnabled(true);
        btnFetchTrainDetails.setEnabled(false);
        btnUpdateTrain.setEnabled(true);
                
        spnrActualReservedCapacity.setValue(selectedTrain.getTrainCars().get(0).getReservedSeats());
        spnrActualSeatingCapacity.setValue(selectedTrain.getTrainCars().get(0).getNormalSeatCapacity());
        spnrActualStandingCapacity.setValue(selectedTrain.getTrainCars().get(0).getPackagedCapacity());
        spnrActualTrainCarsCount.setValue(selectedTrain.getTrainCars().size());
        
        //Restroom Count
        int restroomCount = findBicycleAvailable(selectedTrain);
        spnrActualTrainCarsWithRestrooms.setValue(restroomCount);
        if(restroomCount > 0){
            rbtnActualRestroomYes.setSelected(true);
            rbtnActualRestroomNo.setSelected(false);
            spnrActualTrainCarsWithRestrooms.setEnabled(true);
            SpinnerNumberModel  model = (SpinnerNumberModel)spnrActualTrainCarsWithRestrooms.getModel();
            model.setMaximum(Integer.parseInt(spnrActualTrainCarsCount.getValue().toString()));
        }
        else {
            rbtnActualRestroomYes.setSelected(false);
            rbtnActualRestroomNo.setSelected(true);
            spnrActualTrainCarsWithRestrooms.setEnabled(false);}
        
        int bycycleCount = findRestRoomAvailable(selectedTrain);
        spnrActualTrainCarsWithBicyles.setValue(bycycleCount);
        if(bycycleCount >0){
            rbtnActualBicycleYes.setSelected(true);
            rbtnActualBicycleNo.setSelected(false);
            spnrActualTrainCarsWithBicyles.setEnabled(true);           
            SpinnerNumberModel  model = (SpinnerNumberModel)spnrActualTrainCarsWithBicyles.getModel();
            model.setMaximum(Integer.parseInt(spnrActualTrainCarsCount.getValue().toString()));
        }
        else {
            rbtnActualBicycleNo.setSelected(true);
            rbtnActualBicycleYes.setSelected(false);
            spnrActualTrainCarsWithBicyles.setEnabled(false);
        }
        
            
    }//GEN-LAST:event_btnFetchTrainDetailsActionPerformed

    private void btnUpdateTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTrainActionPerformed
        // TODO add your handling code here:

        
        Train selectedTrain = (Train) tblTrainCapacityDetails.getValueAt(tblTrainCapacityDetails.getSelectedRow(), 0);
        
        int carCount = (int)spnrActualTrainCarsCount.getValue();
        int normalCapacity = (int) spnrActualSeatingCapacity.getValue();
        int reservedCapacity = (int) spnrActualReservedCapacity.getValue();
        int packedCapacity =(int) spnrActualStandingCapacity.getValue();
        
        int restRoomCar ;
        if(rbtnActualRestroomYes.isSelected())   
            restRoomCar = (int) spnrTrainCarsWithRestrooms.getValue();        
        else 
            restRoomCar = findRestRoomAvailable(selectedTrain);
      
        
        int bicycleCar;
        if(rbtnActualBicycleYes.isSelected())
            bicycleCar   =  (int) spnrTrainCarsWithBicyles.getValue();
        else
            bicycleCar   =  findBicycleAvailable(selectedTrain);
        

        selectedTrain.getTrainCars().clear();
        
        for(int i =0 ; i < carCount-1 ; i++){

            TrainCar tc = new TrainCar(i+1);
            tc.setNormalSeatCapacity(normalCapacity);
            tc.setPackagedCapacity(packedCapacity);
            tc.setReservedSeats(reservedCapacity);
            tc.updateMaximunCapacity();
            selectedTrain.getTrainCars().add(tc);

            if(restRoomCar >=0){
                tc.setIsRestroomPresent(true);
                restRoomCar--;
            }

            if(bicycleCar >=0){
                tc.setIsBicyclesSkisAllowed(true);
                bicycleCar--;
            }

        }
        
        
        spnrActualReservedCapacity.setEnabled(false);
        spnrActualSeatingCapacity.setEnabled(false);
        spnrActualStandingCapacity.setEnabled(false);
        spnrActualTrainCarsCount.setEnabled(false);
        rbtnActualBicycleNo.setEnabled(false);
        rbtnActualBicycleYes.setEnabled(false);
        rbtnActualRestroomNo.setEnabled(false);
        rbtnActualRestroomYes.setEnabled(false);
        spnrActualTrainCarsWithBicyles.setEnabled(false);
        spnrActualTrainCarsWithRestrooms.setEnabled(false);
        btnUpdateTrain.setEnabled(false);
        btnFetchTrainDetails.setEnabled(true);
        populateLinesForTrains();
        
        spnrActualReservedCapacity.setValue(10);
        spnrActualSeatingCapacity.setValue(80);
        spnrActualStandingCapacity.setValue(20);
        spnrActualTrainCarsCount.setValue(1);
        spnrActualTrainCarsWithBicyles.setValue(0);
        spnrActualTrainCarsWithRestrooms.setValue(0);
                
        
        JOptionPane.showMessageDialog(this, "Train updated successfully.", "Update Train", JOptionPane.INFORMATION_MESSAGE);
     
    }//GEN-LAST:event_btnUpdateTrainActionPerformed

    private void spnrActualTrainCarsCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnrActualTrainCarsCountStateChanged
        // TODO add your handling code here:
        SpinnerNumberModel  model = (SpinnerNumberModel)spnrActualTrainCarsWithRestrooms.getModel();
        model.setMaximum(Integer.parseInt(spnrActualTrainCarsCount.getValue().toString()));
        
        SpinnerNumberModel  model1 = (SpinnerNumberModel)spnrActualTrainCarsWithBicyles.getModel();
        model1.setMaximum(Integer.parseInt(spnrActualTrainCarsCount.getValue().toString()));
        
    }//GEN-LAST:event_spnrActualTrainCarsCountStateChanged

    boolean bTrainNamePresent = false;
    private void txtTrainNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTrainNameFocusLost
        // TODO add your handling code here:
        if(txtTrainName.getText().trim().length() <=0){
            lblErrMsg.setText("Train Name cannot be blank.");
            bTrainNamePresent = true;            
        }
        else {
           
            boolean matched = txtTrainName.getText().matches("^[\\w]+[\\w\\s]+$");
            
            if(matched){            
                lblErrMsg.setText("");
                bTrainNamePresent = true;
            }
            else {
                lblErrMsg.setText("Train Name can only have letters, numbers or space.");
                bTrainNamePresent = false;   
            }
        }
        
    }//GEN-LAST:event_txtTrainNameFocusLost

    void populateTable(Line selectedLine){
        
        DefaultTableModel dtm = (DefaultTableModel) tblTrainCapacityDetails.getModel();
        dtm.setRowCount(0);
        
        //lblLineName.setText(selectedTrain.getLineOnTrain().getLineName());
        
        for(Train t : enterprise.getTrainCatalog().getTrainsList()){
            if(t.getLineOnTrain()==selectedLine){
                   Object row[] = new Object[8];
                   row[0] = t;
                   row[1] = t.getTrainCapacity();
                   row[2] = t.getTrainCars().size();
                   row[3] = t.getTrainCars().get(0).getNormalSeatCapacity();
                   row[4] = t.getTrainCars().get(0).getReservedSeats();
                   row[5] = t.getTrainCars().get(0).getPackagedCapacity();
                   row[6] = findRestRoomAvailable(t);
                   row[7] =findBicycleAvailable(t);
                dtm.addRow(row);
            }
        }
    }
    
   private int findRestRoomAvailable(Train t){
        int i =0;
        for(TrainCar tc: t.getTrainCars()){
            if(tc.isIsRestroomPresent()){
                i++;
            }
        }
        return i;
        
    }
    
    private int findBicycleAvailable(Train t){
        int i =0;
        for(TrainCar tc: t.getTrainCars()){
            if(tc.isIsBicyclesSkisAllowed()){
                i++;
            }
        }
        return i;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addCarsPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateTrain;
    private javax.swing.JButton btnFetchTrainDetails;
    private javax.swing.JButton btnUpdateTrain;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cboLines;
    private javax.swing.JComboBox cboLinesForTrains;
    private javax.swing.JPanel createTrainsPanel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblErrMsg;
    private javax.swing.JRadioButton rbtnActualBicycleNo;
    private javax.swing.JRadioButton rbtnActualBicycleYes;
    private javax.swing.JRadioButton rbtnActualRestroomNo;
    private javax.swing.JRadioButton rbtnActualRestroomYes;
    private javax.swing.JRadioButton rbtnBicycleNo;
    private javax.swing.JRadioButton rbtnBicycleYes;
    private javax.swing.JRadioButton rbtnRestroomNo;
    private javax.swing.JRadioButton rbtnRestroomYes;
    private javax.swing.JSpinner spnrActualReservedCapacity;
    private javax.swing.JSpinner spnrActualSeatingCapacity;
    private javax.swing.JSpinner spnrActualStandingCapacity;
    private javax.swing.JSpinner spnrActualTrainCarsCount;
    private javax.swing.JSpinner spnrActualTrainCarsWithBicyles;
    private javax.swing.JSpinner spnrActualTrainCarsWithRestrooms;
    private javax.swing.JSpinner spnrReservedCapacity;
    private javax.swing.JSpinner spnrSeatingCapacity;
    private javax.swing.JSpinner spnrStandingCapacity;
    private javax.swing.JSpinner spnrTrainCarsCount;
    private javax.swing.JSpinner spnrTrainCarsWithBicyles;
    private javax.swing.JSpinner spnrTrainCarsWithRestrooms;
    private javax.swing.JTable tblTrainCapacityDetails;
    private javax.swing.JTextField txtTrainName;
    // End of variables declaration//GEN-END:variables
}
